info:
  title: BWpos API
  version: 1.0.0
  description: This is API documentation for BWpos
openapi: 3.0.0
schemas:
  - https
host: "api.example.com"
paths:
  # Merchant
  /merchant/list:
    get:
      tags:
        - Merchant 商家
        - BW管理後台
      summary: 商家列表
      description: 商家列表. list merchants
      parameters:
        - in: query
          name: id
          description: 商家ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: merchant
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Merchant'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Option Set
  /merchant/data/{id}:
    get:
      tags:
        - Merchant 商家
        - BW管理後台
        - 商圈雲Saas
      summary: 商家詳細資訊
      description: 商家詳細資訊. get merchant data
      parameters:
        - in: path
          name: id
          description: 商家ID.
          schema:
            type: number
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Merchant'
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  /merchant/register:
    post:
      tags:
        - Merchant 商家
        - BW管理後台
        - 商圈雲Saas
      summary: 商家註冊
      description: 商家註冊. merchant registration
      requestBody:
        description: 商家資料
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: 商家電郵地址.
                  type: string
                  format: email
                phone:
                  description: 商家電話.
                  type: string
                password:
                  description: 商家密碼.
                  type: string
                  format: password
                firstName:
                  description: 商家名字.
                  type: string
                lastName:
                  description: 商家姓氏.
                  type: string
                locale:
                  description: 商家使用語言.
                  type: string
                  enum:
                    - en
                    - zh-TW
                    - zh-CN
                toc:
                  description: 商家同意條款.
                  type: bool
              required:
                - email
                - phone
                - password
                - firstName
                - lastName
                - locale
                - toc
              example:
                email: user@example.com
                phone: 123456789
                password: password
                firstName: John
                lastName: Doe
                locale: en
                toc: true
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Merchant'
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error
  /validation/request:
    post:
      tags:
        - Merchant 商家
        - BW管理後台
        - 商圈雲Saas
      summary: 發送手機驗證碼
      description: 發送手機驗證碼. send Mobile Validation Code.
      requestBody:
        description: 商家資料
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                personType:
                  description: 發送SMS對象類型.
                  type: string
                  enum:
                    - merchant
                    - customer
                personId:
                  description: 發送SMS對象Id.
                  type: number
              required:
                - email
                - phone
                - password
                - firstName
                - lastName
                - locale
                - toc
              example:
                email: user@example.com
                phone: 123456789
                password: password
                firstName: John
                lastName: Doe
                locale: en
                toc: true
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Merchant'
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error
  /optionset/list:
    get:
      description: 選項集列表. list option sets
      parameters:
        - in: query
          name: id
          description: 選項集系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: optionset
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OptionSet'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Item API
  /items/list:
    get:
      description: 商品列表. list items
      parameters:
        - in: query
          name: id
          description: 商品系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: item
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Item'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  /items/data/{id}:
    get:
      description: 商品詳細資訊. get item
      parameters:
        - in: path
          name: id
          description: 商品系統ID.
          required: true
          schema:
            type: number
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                $ref: '#/components/schemas/Item'
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Attributes API
  /attribute/list:
    get:
      description: 商品屬性. get item attributes
      parameters:
        - in: query
          name: id
          description: 商品屬性系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: attribute
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Attribute'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Category API
  /category/list:
    get:
      description: 商品分類. get item category 
      parameters:
        - in: query
          name: id
          description: 商品分類系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          name: name
          description: 商品分類名稱.
          schema:
            type: string
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: category
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Category'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # ModifierSet API
  /modifierset/list:
    get:
      description: 商品配料集. get item modifier sets
      parameters:
        - in: query
          name: id
          description: 商品配料集系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          name: name
          description: 商品配料集名稱.
          schema:
            type: string
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: modifierset
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ModifierSet'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Image API
  /image/list:
    get:
      description: 列出圖片. get Images
      parameters:
        - in: query
          name: id
          description: 圖片系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: category
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Image'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

  # Location API
  /location/list:
    get:
      description: 列出地點. get Locations
      parameters:
        - in: query
          name: id
          description: 地點系統ID.
          schema:
            type: array
            items:
              type: number
            explode: true
            style: form
        - in: query
          $ref: '#/components/parameters/limitParam'
        - in: query
          $ref: '#/components/parameters/offsetParam'
      responses:
        "200":
          description: 200 response
          content:
            application/json; charset=utf-8:
              schema:
                type: object
                properties:
                  object:
                    type: string
                    const: category
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Location'
                  has_more:
                    type: boolean
                required:
                  - object
                  - data
                  - has_more
        "404":
          description: 404 response
          content:
            text/html; charset=UTF-8:
              schema:
                type: string
        "403":
          description: 403 response
          content:
            application/json; charset=UTF-8:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  error:
                    type: string
                required:
                  - status
                  - error

components:
  parameters:
    offsetParam:
      name: offset
      in: query
      description: 起始數據筆數. the offset of starting record
      required: false
      schema:
        type: number
        default: 0

    limitParam:
      name: limit
      in: query
      description: 顯示數據筆數. the number of records to show
      required: false
      schema:
        type: number
        default: 30

  schemas:
    Image:
      type: object
      description: |
        圖片. Image 
      properties:
        id:
          type: number
          description: |
            圖片系統ID. Image ID
        name:
          type: string
          description: |
            圖片名稱. Image name
        url:
          type: string
          description: |
            圖片URL. Image URL
        size:
          type: number
          description: |
            圖片大小. Image size
        created_at:
          type: number
          description: |
            圖片創建時間 timestamp. Image created timestamp
      required:
        - name
        - url
        - size
      example:
        id: 1
        name: logo
        url: https://example.com/logo.png
        size: 123
        created_at: 1600000000

    Location:
      type: object
      description: |
        地點. Location
      properties:
        id:
          type: number
          description: |
            地點系統ID. Location ID
        name:
          type: string
          description: |
            地點名稱. Location name
        created_at:
          type: number
          description: |
            地點創建時間 timestamp. Location created timestamp
      required:
        - name
      example:
        id: 1
        name: home
        created_at: 1600000000

    Option:
      type: object
      description: |
        選項. Option
      properties:
        name:
          type: string
          description: |
            選項名稱. Option name
        color:
          type: string
          pattern: '^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$'
          description: |
            選項顏色. Option color in hex format
      required:
        - name
        - color
      example:
        name: Red
        color: "#FF0000"

    OptionSet:
      type: object
      description: |
        選項集. Option set
      properties:
        id:
          type: number
          description: |
            選項集系統ID. Option set ID
        name:
          type: string
          description: |
            選項集名稱. Option set name
        type:
          type: string
          enum:
            - text
            - textColor
        options:
          type: array
          description: |
            可用選項. Options available
          items:
            $ref: '#/components/schemas/Option'
      required:
        - id
        - name
        - type
        - options
      example:
        id: 1
        name: Color
        type: text
        options: [{"color": "#FF0000", "name": "Red"}, {"color": "#00FF00", "name": "Green"}, {"color": "#0000FF", "name": "Blue"}]

    Unit:
      type: object
      description: |
        單位. Unit
      properties:
        id:
          type: number
          description: |
            單位系統ID. Unit ID
        name:
          type: string
          description: |
            單位名稱. Unit name
        decimal:
          type: string
          enum:
            - '1'
            - '.0'
            - '.00'
            - '.000'
            - '.0000'
            - '.00000'
          description: |
            小數點位數. Decimal places
        custom:
          type: boolean
          description: |
            是否為自定義單位. Is it a custom unit
      required:
        - id
        - name
        - decimal
        - custom
      example:
        id: 1
        name: kg
        decimal: '.0'
        custom: false


    Item:
      type: object
      properties:
        id:
          type: number
          description: |
            商品系統ID. Item Id
        name:
          type: string
          description: |
            商品名稱. Item name
        category_id:
          type: number
          description: |
            商品分類系統ID. Item Category ID
        category:
          $ref: '#/components/schemas/Category'
        description:
          type: string
          description: |
            商品描述. Item description
        images:
          type: array
          description: |
            商品圖片. Item images
          items:
            $ref: '#/components/schemas/Image'
        locations:
          type: array
          description: |
            商品上架地點. Item on stock locations
          items:
            $ref: '#/components/schemas/Location'
        sku:
          type: string
          description: |
            商品SKU. Item SKU
        unit:
          $ref: '#/components/schemas/Unit'
        price:
          type: number
          description: |
            商品價格. Item price
        weight:
          type: number
          description: |
            商品重量. Item weight
        tracking:
          type: boolean
          description: |
            是否開啟追蹤. Is tracking enabled
        low_stock_alert:
          type: boolean
          description: |
            是否開啟低庫存警示. Is low stock alert enabled
        low_stock_amount:
          type: number
          description: |
            低庫存警示數量. Low stock alert threshold
        variations:
          type: array
          description: |
            商品變異. Item variations
          items:
            $ref: '#/components/schemas/Variation'
        attributes:
          type: array
          description: |
            商品屬性. Item attributes
          items:
            $ref: '#/components/schemas/AttributeValue'
      required:
        - id
        - name
        - category_id

    #Variation
    Variation:
      allOf:
        - $ref: '#/components/schemas/Item'
        - type: object
          properties:
            parent_id:
              type: number
              description: |
                父商品系統ID. Parent Item ID
          required:
            - parent_id

    #Attribute
    Attribute:
      type: object
      properties:
        id:
          type: number
          description: |
            商品屬性系統ID. Attribute ID
        slug:
          type: string
          description: |
            屬性名稱. Attribute slug
        name:
          type: string
          description: |
            屬性顯示名稱. Attribute display name
        type:
          type: string
          description: |
            屬性類型. Attribute type
          enum:
            - text
            - toggle
            - number
            - selection
        multiple:
          type: boolean
          description: |
            是否為多選. Is it multiple
        options:
          type: array
          description: |
            屬性選項. Attribute options
          items:
            $ref: '#/components/schemas/Option'
        decimal:
          type: string
          enum:
            - '1'
            - '.0'
            - '.00'
            - '.000'
            - '.0000'
            - '.00000'
          description: |
            小數點位數. Decimal places
      required:
        - id
        - slug
        - name
        - type
      example:
        id: 1
        slug: color
        name: Color
        type: text
        multiple: false
        options: [{"color": "#FF0000", "name": "Red"}, {"color": "#00FF00", "name": "Green"}, {"color": "#0000FF", "name": "Blue"}]
        decimal: '.0'

    #AttributeValue
    AttributeValue:
      type: object
      properties:
        name:
          type: string
          description: |
            屬性名稱. Attribute slug
        value:
          type: string
          description: |
            屬性值. Attribute value
      required:
        - name
        - value
      example:
        name: Color
        value: Red

    #Modifier:
    Modifier:
      type: object
      properties:
        id:
          type: number
          description: |
            配料系統ID. Modifier ID
        name:
          type: string
          description: |
            配料名稱. Modifier name
        image:
          description: |
            配料圖片. Modifier image
          $ref: '#/components/schemas/Image'
        price:
          type: number
          description: |
            配料價錢. Modifier price
        status:
          type: boolean
          description: |
            是否啟用. Is it enabled
      required:
        - id
        - name
        - price
        - status
      example:
        id: 1
        name: Spicy
        image: https://example.com/spicy.png
        price: 10
        status: true

    # Modifier Set
    ModifierSet:
      type: object
      properties:
        id:
          type: number
          description: |
            配料集系統ID. Modifier set ID
        name:
          type: string
          description: |
            配料集名稱. Modifier set name
        multiple:
          type: boolean
          description: |
            是否為多選. Is it multiple
        modifiers:
          type: array
          description: |
            配料集可選配料. Modifiers in modifier set
          items:
            $ref: '#/components/schemas/Modifier'
        locations:
          type: array
          description: |
            配料集可選地點. Locations in modifier set
          items:
            $ref: '#/components/schemas/Location'
      example:
        id: 1
        name: Spicy
        multiple: false
        modifiers: [{"id": 1, "name": "Spicy", "image": "https://example.com/spicy.png", "price": 10, "status": true}]
        locations: [{"id": 1, "name": "Macau"}]

    # Category
    Category:
      type: object
      properties:
        id:
          type: number
          description: |
            分類系統ID. Category ID
        name:
          type: string
          description: |
            分類名稱. Category name
      required:
        - id
        - name
      example:
        id: 1
        name: Food

    Merchant:
      type: object
      properties:
        id: 
          type: number
          description: |
            商家系統ID. Merchant ID
        name: 
          type: string
          description: |
            商家名稱. Merchant name
        email:
          description: 商家電郵地址.
          type: string
          format: email
        phone:
          description: 商家電話.
          type: string
        password:
          description: 商家密碼.
          type: string
          format: password
        firstName:
          description: 商家名字.
          type: string
        lastName:
          description: 商家姓氏.
          type: string
        locale:
          description: 商家使用語言.
          type: string
          enum:
            - en
            - zh-TW
            - zh-CN
        toc:
          description: 商家同意條款.
          type: bool
      required:
        - id
        - name
      example:
        id: 1
        name: ABC Company
        email: user@example.com
        phone: 1234567890
        firstName: John
        lastName: Doe
        locale: en
        toc: true




